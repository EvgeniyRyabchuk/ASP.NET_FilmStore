@model FilmsStorage.Models.RegisterModel

@{
    ViewBag.Title = FilmsStorage.Resources.Views.Account.Register.RegisterBtn;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4">
                <div class="form-horizontal">
                    <h4>@FilmsStorage.Resources.Views.Account.Register.RegisterTitle</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" align="center">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" align="center">
                        @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" align="center">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" align="center">
                        @Html.LabelFor(model => model.PasswordRepetition, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.PasswordRepetition, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PasswordRepetition, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" align="center">
                        <div class="col-md-offset-2 col-md-10 pt-2">
                            <input type="submit" value="@FilmsStorage.Resources.Views.Account.Register.RegisterBtn" class="btn btn-success" />
                        </div>
                    </div>

                </div>
                </div>
            </div>
        </div>
                }

                @{
                    Html.RenderPartial("ShowError");
                }

                @if (!string.IsNullOrEmpty(Model.Password))
                {
                    <script>
        const pass = document.querySelector("#Password");
        pass.value = "@Model.Password";
                    </script>
                }

                @if (!string.IsNullOrEmpty(Model.PasswordRepetition))
                {
                    <script>
        const passRep = document.querySelector("#PasswordRepetition");
        passRep.value = "@Model.PasswordRepetition";
                    </script>
                }
